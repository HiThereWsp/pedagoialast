
import { useEffect } from "react";
import { toast } from "../toast/toast"; // Utilisation directe de toast

/**
 * Hook for handling initial content loading
 */
export function useInitialContentLoad(
  didInitialFetch: React.MutableRefObject<boolean>,
  fetchContent: () => Promise<any[]>,
  forceRefresh: () => void,
  invalidateCache: () => void,
  authReady: boolean,
  user: any | null
) {
  // Load data once after authentication
  useEffect(() => {
    const loadContentData = async () => {
      // Check if authentication is ready and user is logged in
      if (!authReady || !user) {
        console.log("‚è≥ En attente de l'authentification...");
        return;
      }
      
      if (!didInitialFetch.current) {
        console.log("üì• SavedContentPage: Chargement initial des donn√©es...");
        didInitialFetch.current = true;
        
        forceRefresh();
        
        try {
          invalidateCache();
          
          const data = await fetchContent();
          console.log(`‚úÖ SavedContentPage: Chargement initial termin√©: ${data.length} √©l√©ments charg√©s`);
          
          if (data.length === 0) {
            console.log("üîÑ SavedContentPage: Aucun contenu trouv√©, tentative de rechargement forc√©");
            
            invalidateCache();
            
            setTimeout(async () => {
              try {
                forceRefresh();
                
                const refreshedData = await fetchContent();
                console.log(`üìä SavedContentPage: Rechargement forc√© termin√©: ${refreshedData.length} √©l√©ments`);
                
                if (refreshedData.length === 0) {
                  toast({
                    description: "Aucun contenu trouv√©. Cr√©ez votre premier contenu !",
                  });
                }
              } catch (error) {
                console.error("‚ùå Erreur lors du rechargement forc√©:", error);
              }
            }, 600);
          }
        } catch (err) {
          console.error("‚ùå SavedContentPage: Erreur lors du chargement initial:", err);
        }
      }
    };
    
    loadContentData();
  }, [fetchContent, forceRefresh, invalidateCache, authReady, user, didInitialFetch]);
}
